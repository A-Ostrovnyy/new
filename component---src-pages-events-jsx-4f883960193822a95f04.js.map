{"version":3,"sources":["webpack:///./src/pages/events.jsx","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/index.js","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Events","currentDate","Date","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","_ref","events","allIcal","edges","reduce","event","node","dtstamp","start","end","concat","map","key","summary","toLocaleString","description","location","data","_public_static_d_3877522621_json__WEBPACK_IMPORTED_MODULE_2__","Header_Header","siteTitle","react_default","className","propTypes","string","isRequired","components_Footer_Footer","__webpack_require__","d","__webpack_exports__","Layout","Layout_Layout","children","gatsby_browser_entry","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","keywords","lang","components","_3703108833","prop_types_default","m","module","exports","default","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","Error","object","func","ProdPageRenderer","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape"],"mappings":"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","file":"component---src-pages-events-jsx-4f883960193822a95f04.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Layout } from '../components/Layout';\n\nconst Events = () => {\n    const currentDate = new Date();\n\n    return (\n        <Layout>\n            <StaticQuery\n                query={graphql`\n                    query EventsQuery {\n                        allIcal(\n                            filter: { sourceInstanceName: { eq: \"events\" } }\n                            sort: { order: ASC, fields: [start] }\n                        ) {\n                            edges {\n                                node {\n                                    start\n                                    end\n                                    summary\n                                    description\n                                    location\n                                }\n                            }\n                        }\n                    }\n                `}\n                render={({ allIcal: { edges: events } }) => (\n                    <ul>\n                        {events\n                            .reduce((events, event) => {\n                                event = event.node;\n                                event.dtstamp = new Date(event.dtstamp);\n                                event.start = new Date(event.start);\n                                event.end = new Date(event.end);\n\n                                if (event.end < currentDate) {\n                                    return events;\n                                }\n\n                                return [...events, event];\n                            }, [])\n                            .map(event => (\n                                <li\n                                    key={`${\n                                        event.summary\n                                    } Date: ${event.start.toLocaleString()}`}\n                                >\n                                    <h2>{event.summary}</h2>\n                                    <ul>\n                                        <li>Описание: {event.description}</li>\n                                        <li>Место: {event.location}</li>\n                                        <li>\n                                            Начало:{' '}\n                                            {event.start.toLocaleString()}\n                                        </li>\n                                        <li>\n                                            Конец: {event.end.toLocaleString()}\n                                        </li>\n                                    </ul>\n                                </li>\n                            ))}\n                    </ul>\n                )}\n            />\n        </Layout>\n    );\n};\n\nexport { Events as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ siteTitle }) => (\n    <header className=\"header\">\n        <h1>{siteTitle}</h1>\n    </header>\n);\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string.isRequired,\n};\n\nexport { Header as default };\n","import React from 'react';\n\nconst Footer = () => (\n    <footer className=\"footer\">\n        <p>2018 © Веб-стандарты</p>\n    </footer>\n);\n\nexport default Footer;\n","export { Header } from './Header';\nexport { Layout } from './Layout';\nexport { Footer } from './Footer';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Header } from '../../components';\nimport { Footer } from '../../components';\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        keywords\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Helmet\n                    title={data.site.siteMetadata.title}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: data.site.siteMetadata.description,\n                        },\n                        {\n                            name: 'keywords',\n                            content: data.site.siteMetadata.keywords,\n                        },\n                    ]}\n                >\n                    <html lang=\"en\" />\n                </Helmet>\n                <Header siteTitle={data.site.siteMetadata.title} />\n                <main>{children}</main>\n                <Footer />\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport { Layout as default };\n","export { default as Layout } from './Layout';\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}